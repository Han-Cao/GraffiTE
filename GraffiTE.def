Bootstrap: library
From: ubuntu:20.04

%post
    apt-get -y update
    apt-get install --assume-yes software-properties-common
    add-apt-repository universe
    apt-get update
    apt-get install --assume-yes python3-pip git build-essential zlib1g-dev libjellyfish-2.0-dev pkg-config cmake r-base-core gawk autoconf

    apt-get -y install \
    libssl-dev \
    libxml2-dev \
    libcurl4-openssl-dev \
    curl libgomp1 \
    wget \
    perl \
    python3-h5py \
    libfile-which-perl \
    libtext-soundex-perl \
    libjson-perl liburi-perl libwww-perl \
    libdevel-size-perl \
    bedtools \
    ncbi-blast+

    apt-get install --assume-yes bcftools tabix libbz2-dev liblzma-dev

    git clone --recursive https://github.com/samtools/htslib.git
    cd htslib
    autoreconf -i
    ./configure
    make
    make install
    cd ${HOME}
    rm -rf htslib

    git clone https://github.com/samtools/samtools.git
    cd samtools
    autoheader
    autoconf -Wno-syntax
    ./configure --without-curses
    make
    make install
    cd ${HOME}
    rm -rf samtools

    git clone https://github.com/fritzsedlazeck/SURVIVOR.git
    cd SURVIVOR/Debug
    make
    cp SURVIVOR /usr/local/bin
    cd $HOME
    rm -rf SURVIVOR

    git clone https://github.com/lh3/minimap2
    cd minimap2
    make
    cp minimap2 /usr/local/bin
    cd $HOME
    rm -rf minimap2

    mkdir /metadata
    echo `dpkg -l | grep jellyfish | tr -s " " | cut -d " " -f 2,3` > /metadata/jellyfish.lib.version
    mkdir /repos
    cd /repos
    git clone https://github.com/eblerjana/pangenie.git
    cd pangenie
    mkdir build
    cd build
    # cmake -DCOMPILATION_ARCH=OFF .. 
    cmake ..
    make -j 4
    cp src/PanGenie /usr/local/bin
    cp src/PanGenie-graph /usr/local/bin
    cd ..
    echo `git rev-parse --short HEAD` > /metadata/pangenie.git.version
    cd ${HOME}

    pip3 install pysam pyparsing svim-asm pandas vcfpy

    R --slave -e 'install.packages(c("XML", "dplyr", "stringr", "tidyr", "readr", "vcfR", "optparse"), repos="https://cloud.r-project.org/")'
    R --slave -e 'if (!require(c("BiocManager"), quietly = TRUE)) install.packages(c("BiocManager")); BiocManager::install(c("biomaRt", "Biostrings"))'
    R --slave -e 'install.packages(c("biomartr"), repos="https://cloud.r-project.org/")'

    #git clone https://github.com/Dfam-consortium/TETools.git
    #bash TETools/getsrc.sh
    #mv src /opt/src
    #cp TETools/sha256sums.txt /opt/src/
    #mkdir -p /opt/ucsc_tools
    #cp TETools/LICENSE.ucsc /opt/ucsc_tools/LICENSE

    # Install RepeatMasker
    mkdir /opt/src
    cd /opt/src
    wget -O rmblast-2.11.0+-x64-linux.tar.gz https://www.repeatmasker.org/rmblast-2.11.0+-x64-linux.tar.gz 
    wget -O hmmer-3.3.2.tar.gz http://eddylab.org/software/hmmer/hmmer-3.3.2.tar.gz 
    wget -O trf-4.09.1.tar.gz https://github.com/Benson-Genomics-Lab/TRF/archive/v4.09.1.tar.gz
    wget -O RepeatMasker-4.1.3.tar.gz https://www.repeatmasker.org/RepeatMasker/RepeatMasker-4.1.3.tar.gz

    # Install RMBlast
    cd /opt \
    && mkdir rmblast \
    && tar --strip-components=1 -x -f src/rmblast-2.11.0+-x64-linux.tar.gz -C rmblast \
    && rm src/rmblast-2.11.0+-x64-linux.tar.gz

    # Compile HMMER
    cd /opt/src
    tar -x -f hmmer-3.3.2.tar.gz \
    && cd hmmer-3.3.2 \
    && ./configure --prefix=/opt/hmmer && make && make install \
    && make clean

    # Compile TRF
    cd /opt/src
    tar -x -f trf-4.09.1.tar.gz \
    && cd TRF-4.09.1 \
    && mkdir build && cd build \
    && ../configure && make && cp ./src/trf /opt/trf \
    && cd .. && rm -r build

    # Configure RepeatMasker
    cd /opt \
    && tar -x -f src/RepeatMasker-4.1.3.tar.gz \
    && chmod a+w RepeatMasker/Libraries \
    && cd RepeatMasker \
    && perl configure \
    -hmmer_dir=/opt/hmmer/bin \
    -rmblast_dir=/opt/rmblast/bin \
    -libdir=/opt/RepeatMasker/Libraries \
    -trf_prgm=/opt/trf \
    -default_search_engine=rmblast \
    && cd .. && rm src/RepeatMasker-4.1.3.tar.gz

    # hotfix RepeatMasker 4.1.3
    cd /opt/RepeatMasker \
    && head -n 3725 ProcessRepeats > ProcessBefore \
    && awk 'NR > 3726' ProcessRepeats > ProcessAfter \
    && touch ProcessFix \
    && printf "              if ( \$newRight ) {\n" >> ProcessFix \
    && printf "                \$newRight->setLeftLinkedHit( \$newHit );\n" >> ProcessFix \
    && printf "              }\n" >> ProcessFix \
    && cat ProcessBefore ProcessFix ProcessAfter > ProcessRepeats \
    && rm ProcessBefore ProcessAfter ProcessFix

    cd $HOME
    # Install dependencies and some basic utilities
    apt-get -y update \
    && apt-get -y install \
    aptitude \
    libgomp1 \
    perl \
    python3-h5py \
    libfile-which-perl \
    libtext-soundex-perl \
    libjson-perl liburi-perl libwww-perl \
    libdevel-size-perl \
    && aptitude install -y ~pstandard ~prequired \
    vim nano \
    procps strace \
    libpam-systemd-

    echo "PS1='(dfam-tetools \$(pwd))\\\$ '" >> /etc/bash.bashrc
    LANG=C
    PYTHONIOENCODING=utf8
    PATH=/opt/RepeatMasker:/opt/RepeatMasker/util:/opt/RepeatModeler:/opt/RepeatModeler/util:/opt/coseg:/opt/ucsc_tools:/opt:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    apt-get remove --assume-yes git software-properties-common cmake make pkg-config build-essential autoconf
    apt-get autoremove --assume-yes
    apt-get clean --assume-yes

%environment
    export LC_ALL=C
    export LANG=C
    export PYTHONIOENCODING=utf8
    export PATH=/opt/RepeatMasker:/opt/RepeatMasker/util:/opt:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin